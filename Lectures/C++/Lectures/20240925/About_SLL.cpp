/*
LinkedList

-배열과 다르게 노드 기반으로 이루어져 있다.
-노드가 다음 노드에 대한 포인터를 가지고 있다.(data)
ㄴ노드 : 각각의 노드에는 데이터와 다음 노드에 대한 참조를 포함한다.
ㄴ헤드(head) : 리스트의 첫번째 노드이다.
ㄴ꼬리(tail) : 리스트의 마지막 노드이다.(포인터는 NULL 뒤에 아무것도 없기 때문에)

Single Linked Node 

ㄴ처음부터 끝까지 다 검사를 해야하기에 탐색속도가 느리다 . 
ㄴ삭제할떄는 뒤에거를 가리키는 포인터를 그뒤뒤걸로 변경하고 삭제할 노드를 임시저장.
ㄴ노드를 중간삽입할때는 뒤에서 가리키는 포인터를 새로 들어갈 노드의 포인터로 설정 , 새로 들어갈 노드의 포인터를 그 뒤 노드 포인터로 설정
------------------		------------------		------------------
|	data	|p|    --->	|	data	|p|		--->  |	 data	|p|
------------------		------------------		------------------

Double Linked Node
------------------		------------------
|	data	|p|		--->  p|	data	|p
------------------		------------------

기존의 배열 구조 인덱스로 바로 접근 가능하다
------------------------------------			
|	|	|	|	|	|	|	|	|	
------------------------------------			

*/


#include "SLL.h"


using namespace std;


int main()
{
	SLL s;

	s.Insert(1);
	s.Insert(1);
	s.Insert(2);
	s.Insert(1);


	s.Delete(1);

	s.Print();
}